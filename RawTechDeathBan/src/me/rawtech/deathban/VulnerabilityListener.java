package me.rawtech.deathban;

import me.rawtech.deathban.instances.PlayerInstance;
import org.bukkit.entity.Entity;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.*;
import org.bukkit.event.player.PlayerInteractEvent;

public class VulnerabilityListener
		implements Listener {
	@EventHandler
	public void onPlayerInteract(PlayerInteractEvent event) {
		if (!RawTechDeathBan.getPlayer(event.getPlayer()).isVulnerable()) {
			event.getPlayer().sendMessage("You cannot interact while invulnerable!");
			event.setCancelled(true);
		}
	}

	@EventHandler
	public void onFoodLevelChange(FoodLevelChangeEvent e) {
		Entity player = e.getEntity();
		if (((player instanceof Player)) &&
				(!RawTechDeathBan.getPlayer((Player) player).isVulnerable()))
			e.setCancelled(true);
	}

	@EventHandler
	public void onEntityDamage(EntityDamageEvent e) {
		Entity player = e.getEntity();
		if ((player instanceof Player)) {
			EntityDamageEvent.DamageCause cause = e.getCause();
			if ((cause == EntityDamageEvent.DamageCause.DROWNING) || (cause == EntityDamageEvent.DamageCause.LAVA) || (cause == EntityDamageEvent.DamageCause.FIRE) || (cause == EntityDamageEvent.DamageCause.FIRE_TICK)) {
				return;
			}
			PlayerInstance pi = RawTechDeathBan.getPlayer((Player) player);
			if (!pi.isVulnerable())
				e.setCancelled(true);
			else
				pi.setCombatTime(10);
		}
	}

	@EventHandler
	public void onEntityShootBow(EntityShootBowEvent e) {
		if ((e.getEntity() instanceof Player)) {
			PlayerInstance pi = RawTechDeathBan.getPlayer((Player) e.getEntity());
			if (!pi.isVulnerable()) {
				e.setCancelled(true);
				((Player) e.getEntity()).sendMessage("You cannot shoot a bow while you are invulnerable.");
			} else {
				pi.setCombatTime(10);
			}
		}
	}

	@EventHandler
	public void onDamageByEntity(EntityDamageByEntityEvent event) {
		Entity player = event.getEntity();
		Entity damager = event.getDamager();

		if ((player instanceof Player)) {
			PlayerInstance pi = RawTechDeathBan.getPlayer((Player) player);
			if (!pi.isVulnerable()) {
				event.setCancelled(true);
				if ((damager instanceof Player))
					((Player) damager).sendMessage("You cannot attack " + ((Player) player).getName() + " while they are invulnerable!");
			} else {
				pi.setCombatTime(10);
			}
		}

		if ((damager instanceof Player)) {
			PlayerInstance dpi = RawTechDeathBan.getPlayer((Player) damager);
			if (dpi.isVulnerable())
				dpi.setCombatTime(10);
		}
	}

	@EventHandler
	public void onEntityTarget(EntityTargetEvent e) {
		Entity player = e.getTarget();
		if (((player instanceof Player)) &&
				(!RawTechDeathBan.getPlayer((Player) player).isVulnerable()))
			e.setCancelled(true);
	}
}